AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Inventory Management System SAM Template


Parameters:
  Stage:
    Type: String
    Description: Environment stage name
    Default: dev

Resources:
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      Auth:
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !GetAtt UserPool.Arn
      Cors:
        AllowMethods: "'*'"
        AllowHeaders: "'Content-Type,Authorization'"
        AllowOrigin: "'*'"

  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub "${AppName}-${StageName}-user-pool"
      AutoVerifiedAttributes:
        - email
      UsernameAttributes:
        - email
      Schema:
        - Name: email
          AttributeDataType: String
          Required: true
          Mutable: true
        - Name: firstName
          AttributeDataType: String
          Required: No
          Mutable: true
        - Name: lastName
          AttributeDataType: String
          Required: No
          Mutable: true

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    DependsOn: UserPool
    Properties:
      ClientName: !Sub "inventory-sys-${Stage}-client"
      UserPoolId: !Ref UserPool
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      PreventUserExistenceErrors: ENABLED

  AdminGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: Admin
      UserPoolId: !Ref UserPool
      Description: Administrators with full control over the system

  SalesPersonGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: SalesPerson
      UserPoolId: !Ref UserPool
      Description: Sales Person with limited access